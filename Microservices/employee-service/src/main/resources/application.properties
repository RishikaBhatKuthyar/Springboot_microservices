# Application Name
spring.application.name=Employee-Service

# Database Configuration (Commented out, uncomment if using local MySQL)
# spring.datasource.url=jdbc:mysql://localhost:3306/employee_db
# spring.datasource.username=root
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
# spring.jpa.hibernate.ddl-auto=update

# Server Port Configuration
# server.port=8081

# Eureka Client Configuration (Commented out, used for service discovery)
# eureka.instance.client.serverUrl.defaultZone= http://localhost:8761/eureka/

# Configuration Server
# Optional: Import configuration from the Spring Cloud Config Server if available
spring.config.import=optional:configserver:http://localhost:8888

# Micrometer Tracing (Zipkin)
# Sampling probability set to 100% (1.0) for all requests
management.tracing.sampling.probability=1.0
# Enable tracing in the application
management.tracing.enabled=true
# Enable Zipkin tracing export
management.tracing.export.zipkin.enabled=true
# Zipkin endpoint for sending tracing data
management.tracing.export.zipkin.endpoint=http://localhost:9411/api/v2/spans

# Logging Configuration
# Custom logging pattern to include traceId and spanId for distributed tracing
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
# Enable debug logging for Spring Web
logging.level.org.springframework.web=DEBUG

# Debugging for Tracing and Zipkin
# Enable debug logging for tracing and Zipkin reporter
logging.level.io.micrometer.tracing=DEBUG
logging.level.zipkin2.reporter=DEBUG
# Enable debug logging for Spring Boot context configuration
logging.level.org.springframework.boot.context.config=DEBUG

# RabbitMQ Configuration
# Host and port configuration for RabbitMQ
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
# RabbitMQ credentials (default guest)
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest


# Actuator Configuration for Circuit Breakers
# Enable health checks for circuit breakers
management.health.circuitbreakers.enabled=true
# Expose health actuator endpoints
management.endpoints.web.exposure.include=health
# Show detailed health information
management.endpoint.health.show-details=always

# Circuit Breaker Configuration
# Enable health indicator for the circuit breaker on the Employee-Service
resilience4j.circuitbreaker.instances.Employee-Service.registerHealthIndicator=true
# Set failure rate threshold to 50%
resilience4j.circuitbreaker.instances.Employee-Service.failureRateThreshold=50
# Minimum number of calls to evaluate circuit breaker state
resilience4j.circuitbreaker.instances.Employee-Service.minimumNumberOfCalls=5
# Automatic transition from OPEN to HALF-OPEN enabled
resilience4j.circuitbreaker.instances.Employee-Service.automaticTransitionFromOpenToHalfOpenEnabled=true
# Time to wait in OPEN state before transitioning to HALF-OPEN state (5 seconds)
resilience4j.circuitbreaker.instances.Employee-Service.waitDurationInOpenState=5s
# Number of calls allowed in HALF-OPEN state
resilience4j.circuitbreaker.instances.Employee-Service.permittedNumberOfCallsInHalfOpenState=3
# Sliding window size for evaluating calls (10 calls)
resilience4j.circuitbreaker.instances.Employee-Service.slidingWindowSize=10
# Sliding window type set to COUNT_BASED
resilience4j.circuitbreaker.instances.Employee-Service.slidingWindowType=COUNT_BASED

# Retry Configuration
# Enable health indicator for the retry on the Employee-Service
resilience4j.retry.instances.Employee-Service.registerHealthIndicator=true
# Maximum retry attempts set to 5
resilience4j.retry.instances.Employee-Service.maxRetryAttempts=5
# Wait duration between retries (5 seconds)
resilience4j.retry.instances.Employee-Service.waitDuration=5s
